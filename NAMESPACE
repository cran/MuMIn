export(
	AICc, beta.weights, dredge, get.models, model.avg, par.avg, QAIC, QAICc,
	getAllTerms, coeffs, tTable, Weights, model.sel, mod.sel, importance,
	gamm, Cp, ICOMP, r.squaredLR, null.fit, model.names, CAICF
)

importFrom(stats, family)


# XXX: compatibility with R < 2.13.0
if (getRversion() >= "2.13.0") {
importFrom(stats, nobs)
} else {
# I couldn't find a way to make version-dependent documentation, so I can't
# export nobs here...
#export(nobs)
S3method(nobs, default)
S3method(nobs, glm)
}

# including the lines below makes this package dependent on 'lme4'
# so, until I figure out how to deal with it, no imports is used....

#importFrom(stats, AIC, as.formula, coef, delete.response, deviance, fitted,
#	formula, logLik, model.frame, model.matrix, na.omit, predict, qnorm, qt,
#	reformulate, residuals, sd, terms, update, weighted.mean)

#importFrom(stats, logLik, terms)
#importMethodsFrom(stats, logLik, terms)
#importFrom(methods, slot, slotNames)
#importFrom(lme4, lmer, logLik, terms)

S3method(print, averaging)
S3method(print, summary.averaging)
S3method(summary, averaging)
S3method(predict, averaging)
S3method(coef, averaging)
S3method(fitted, averaging)
S3method(logLik, averaging)
S3method(confint, averaging)
S3method(vcov, averaging)
S3method(model.matrix, averaging)
S3method(print, model.selection)
S3method(subset, model.selection)
S3method("[", model.selection)
S3method(update, model.selection)
S3method(coef, model.selection)

S3method(mod.sel, model.selection)
S3method(mod.sel, default)

S3method(plot, model.selection)

S3method(importance, averaging)
S3method(importance, model.selection)
S3method(importance, default)

S3method(Weights, model.selection)
S3method(Weights, averaging)
S3method(Weights, data.frame)
S3method(Weights, default)

S3method(getAllTerms, default)
S3method(coeffs, default)
S3method(tTable, default)
S3method(coefDf, default)

S3method(AICc, default)

S3method(AICc, logLik)

S3method(getAllTerms, formula)
S3method(getAllTerms, terms)
S3method(getAllTerms, lm)

S3method(tTable, gam)

S3method(nobs, sarlm)

S3method(tTable, spautolm)
S3method(nobs, spautolm)

S3method(logLik, glmmML)
S3method(tTable, glmmML)
S3method(nobs, glmmML)
S3method(summary, glmmML)

S3method(getAllTerms, coxph)
S3method(tTable, coxph)
S3method(logLik, coxph)
S3method(nobs, coxph)

S3method(tTable, survreg)
S3method(logLik, survreg)
S3method(nobs, survreg)

S3method(getAllTerms, lme)
S3method(coeffs, lme)
S3method(tTable, lme)
S3method(coefDf, lme)

# S3method(getAllTerms, lmer)
# S3method(coeffs, lmer)
# S3method(tTable, lmer)

# S3method(getAllTerms, glmer)
# S3method(coeffs, glmer)
# S3method(tTable, glmer)

S3method(getAllTerms, mer)
S3method(coeffs, mer)
S3method(tTable, mer)
S3method(coefDf, mer)
S3method(nobs, mer)

S3method(tTable, multinom)
S3method(nobs, multinom)

S3method(coeffs, gls)
S3method(tTable, gls)
S3method(coefDf, gls)

S3method(formula, unmarkedFit)
S3method(getAllTerms, unmarkedFit)
S3method(tTable, unmarkedFit)
S3method(coefDf, unmarkedFit)
S3method(nobs, unmarkedFit)
S3method(getAllTerms, unmarkedFitDS)
# this is done by setting S4 method with an .onLoad hook:
# S3method(logLik, unmarkedFit)

S3method(update, gamm)
S3method(print, gamm)
S3method(logLik, gamm)
S3method(formula, gamm)
S3method(nobs, gamm)
S3method(coeffs, gamm)
S3method(getAllTerms, gamm)
S3method(tTable, gamm)

S3method(makeArgs, default)
S3method(makeArgs, gls)
S3method(makeArgs, lme)
S3method(makeArgs, mer)
S3method(makeArgs, unmarkedFit)
# S3method(makeArgs, unmarkedFitOccu)
# S3method(makeArgs, unmarkedFitColExt)
S3method(makeArgs, unmarkedFitDS)

S3method(family, default)
S3method(family, gls)
S3method(family, lme)

S3method(nobs, rq)
